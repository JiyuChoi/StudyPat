<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="studypat.dao.PostMapper">
	<resultMap type="studypat.dto.Post" id="Post">
		<result column="post_no" property="postNo"/>
		<result column="user_no" property="userNo"/>
		<result column="title" property="title"/>
		<result column="post_text" property="postText"/>
		<result column="category" property="category"/>
		<result column="recruit_no" property="recruitNo"/>
		<result column="area" property="area"/>
		<result column="create_date" property="createDate"/>
		<result column="view_count" property="viewCount"/>
		<result column="report" property="report"/>
		<result column="comment_count" property="commentCount"/>
		<result column="scrap_count" property="scrapCount"/>
		<result column="user_nickname" property="userNickName"/>
		
		<association javaType="studypat.dto.User" property="user"> <!-- user 테이블 조인때 사용하기 위해서-->
			<result column="user_no" property="userNo"/>
			<result column="id" property="id"/>
			<result column="password" property="password"/>
			<result column="email" property="email"/>
			<result column="nickname" property="nickName"/>
			<result column="admin" property="admin"/>
		</association>
		
		<association javaType="studypat.dto.Scrap" property="scrap">
			<result column="scrap_no" property="scrapNo"/>  
			<result column="user_no" property="userNo"/>
			<result column="post_no" property="postNo"/>
		</association>
		
		<association javaType="studypat.dto.Comment" property="comment">  
			<result column="comment_no" property="commentNo"/>
			<result column="post_no" property="postNo"/>
			<result column="user_no" property="userNo"/>
			<result column="comment_text" property="commentText"/>
			<result column="create_date" property="createDate"/>
			<result column="secret" property="secret"/>
		</association>
		
		<!-- join시 같이 담아오기 -->
		<collection property="user" javaType="user"/>
	</resultMap>

	<resultMap type="studypat.dto.Tag" id="Tag">
		<result column="tag_no" property="tagNo"/>
		<result column="tag_name" property="tagName"/>
		<result column="post_no" property="postNo"/>
	</resultMap>
	<select id="getCategoryPost" resultType="studypat.dto.Post" resultMap="Post" parameterType="String"> 
			SELECT * FROM (
				SELECT ROWNUM RN, A.*
					FROM (
						SELECT p.*, (
                            select count(*) 
                            from sp_comment 
                            where post_no = p.post_no
                        )comment_count,
                        (
                            select count(*)
                            from sp_scrap
                            where post_no = p.post_no
                        )scrap_count,
                        (
                            select nickname
                            from sp_user
                            where user_no = p.user_no
                        )user_nickname
                        <if test="!tag.equals('')">
						, t.tag_name
						</if>
						FROM sp_post p
						<if test="!tag.equals('')">
						, sp_tag t
						</if>
						where category
						<if test="!category.equals('')">
							=#{category} 
						</if>
						<if test="category.equals('')">
							Like '%'
						</if>
						<if test="search != null">
							and title Like '%' ||  #{search} || '%' 
						</if>
                        <if test="area != 'all'"> and area = #{area}</if>
                        <if test="!tag.equals('')">  and t.post_no = p.post_no and t.tag_name = #{tag}</if>
                        
						<trim prefix="ORDER BY">
							<if test="sort == 'create_date'">  create_date DESC </if>   
					        <if test="sort == 'comment_count'">  comment_count DESC </if>
			                <if test="sort == 'view_count'">  view_count DESC </if>     
			                <if test="sort == 'scrap_count'">  scrap_count DESC </if>     
		                </trim>
						) A
				) where RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="getSearchPost" resultType="studypat.dto.Post" resultMap="Post" parameterType="String"> 
		select * 
		from sp_post
		where title Like '%' ||  #{search} || '%' 
		
		<trim prefix="ORDER BY">
			<if test="sort == 'create_date'"> create_date DESC </if>
			<if test="sort == 'comment_count'"> comment_count DESC </if>
			<if test="sort == 'view_count'"> view_count DESC </if>
			<if test="sort == 'scrap_count'"> scrap_count DESC </if>
		</trim>
	</select>
	
	<select id="countPost" resultType="int" parameterType="String">
		SELECT COUNT(*) 
		FROM sp_post 
		where category
		<if test="!category.equals('')">
			=#{category} 
		</if>
		<if test="category.equals('')">
			Like '%'
		</if>
		<if test="search != null">
			and title Like '%' ||  #{search} || '%' 
		</if>
		<if test="area != 'all'"> and area = #{area}</if>
	</select>
	
	 <select id="countPostTag" resultType="int" parameterType="String">
	 	select count(*)
		from sp_post p, sp_tag t
		where p.post_no = t.post_no and t.tag_name = #{tag} and category
		
		<if test="!category.equals('')">
			=#{category} 
		</if>
		<if test="category.equals('')">
			Like '%'
		</if>
		<if test="search != null">
			and title Like '%' ||  #{search} || '%' 
		</if>
		
		<if test="area != 'all'"> and area = #{area}</if>
	 </select>
	 
	
	<select id="getPostListLatest" resultType="studypat.dto.Post" resultMap="Post" parameterType="String">
	SELECT * 
			FROM (
			SELECT ROWNUM RN, A.*
				FROM (
						SELECT p.*, (
                            select count(*) 
                            from sp_comment 
                            where post_no = p.post_no
                        )comment_count,
                        (
                            select count(*)
                            from sp_scrap
                            where post_no = p.post_no
                        )scrap_count,
                        (
                            select nickname
                            from sp_user
                            where user_no = p.user_no
                        )user_nickname
                        
						FROM sp_post p
                        order by create_date DESC
						) A
				) where RN BETWEEN 0 AND 5
	</select>
	
	<select id="getUserScrapPost" resultMap="Post">
		select *
			from sp_post
			where post_no in (
			    select post_no
			    from sp_scrap
			    where user_no = #{userNo}
			)order by create_date DESC
	</select>
	
	<select id="getPost" resultMap="Post">
		select * from sp_post join sp_user using(user_no) where post_no = #{postNo}
	</select>

	<select id="getPostList" resultMap="Post">
		select * from sp_post
	</select>

	<select id="getUserPostList" resultMap="Post">
		select * from sp_post join sp_user using(user_no) where user_no = #{userNo} order by post_no desc
	</select>
	
	<delete id="deletePost">
		delete sp_post where post_no = #{postNo}
	</delete>
	
	<insert id="uploadPost" parameterType="Post">
		insert into sp_post (user_no, title, post_text, category, recruit_no, area, create_date, view_count, report)
		values(
		#{userNo},
		#{title},
		#{postText},
		#{category},
		#{recruitNo},
		#{area},
		sysdate,
		#{viewCount}, 
		#{report})
	</insert>
	
	<update id="updatePost" parameterType="Post">
		update sp_post set
		title = #{title},
		post_text = #{postText},
		category = #{category},
		recruit_no = #{recruitNo},
		area = #{area}
		
		where post_no = #{postNo}
	</update>
	 
	
	 
	 <update id="addView">
	 	update sp_post set
	 	view_count = view_count + 1
	 	where post_no = #{postNo}
	 </update>

	 <update id="reportPost">
	 	update sp_post set
	 	report = report + 1
	 	where post_no = #{postNo}
	 </update>
</mapper>

